// Transform a matrix into a dense array.
func real[int, int] matrix2array(matrix M) {
  real[int, int] A(M.n, M.n);
  for (int i = 0; i < M.n; i++) {
    for (int k = 0; k < M.n; k++) {
      A(i, k) = M(i, k);
    }
  }
  return A;
}

// Computes the trace of an n times n matrix A.
func real tr(matrix A) {
  real trc = 0.0;
  for (int i = 0; i < A.n; i++) {
    trc += A(i, i);
  }
  return trc;
}

// Check if first eigenvalue of A is positive.
func bool feasible(matrix A) {
  matrix B = eye(A.n);
  Mat dA(A);
  Mat dB(B);
  real[int] nev(1);
  EPSSolve(dA, dB, values = nev, sparams = "-eps_largest_real");
  bool answer = nev[0] <= 0;
  return answer;
}

