// Create indicator functions of the partition consisting of R nested rings.

// Imports.
include "params.edp";

// Load mesh.
string meshname = "Th" + R + "_" + D + ".msh";
mesh Th = readmesh("mesh/" + meshname);

// Create array of vectors.
real[int] radii(N);
for (int j = 0; j < N; j++) {
 radii[j] = real( j + 1 ) / N;
}

// Create functional space.
fespace Vh(Th, P1);

// Create masks.
real prev = -1;
real r;
real eps = 1.0 / ( 5 * D );
for (int j = 0; j < N; j++) {
  r = radii[j];
  Vh mask = ( prev + eps < x ^ 2 + y ^ 2 ) * ( x ^ 2 + y ^ 2 <= r ^ 2 + eps );
  if (dev == 1) {
    plot(mask, fill = true, cmm = "r = " + r, wait = true);
  } else {
    string maskname = "mesh/disks/" + N + "_" + ( j + 1 ) + ".txt";
    ofstream ff(maskname);
    ff << mask[];
  }
  prev = r ^ 2;
}
