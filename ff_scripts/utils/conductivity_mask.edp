// Generate masks.
Vh[int] masks(6);
Vh theta = pi - atan2(y, -x);
real dtheta = pi / 3;
real eps = 1e-3;
Vh sigma0 = 0;
for (int j = 0; j < 6; j++){
  real sj = getARGV("-s" + j, j + 1);
  masks[j] = ( j * dtheta - eps <= theta) * (theta < ( j + 1 ) * dtheta - eps);
  sigma0 = sigma0 + sj * masks[j];
}
